---
# CDI Deployment
- name: Check if namespace {{ cdi_namespace }} exists
  shell: "{{ cluster_command }} get ns {{ cdi_namespace }}"
  ignore_errors: true
  register: ns

- name: Create {{ cdi_namespace }} namespace using kubectl
  shell: kubectl create namespace {{ cdi_namespace }}
  when: ns.rc != 0
        and platform == "kubernetes"

- name: Create {{ cdi_namespace }} namespace using oc
  shell: oc new-project {{ cdi_namespace }}
  when: ns.rc != 0
        and platform == "openshift"

- name: Render CDI operator
  template:
    src: "cdi-operator.yaml.j2"
    dest: "/tmp/cdi-operator.yaml"

- name: Create CDI Operator
  command: "{{ cluster_command }} apply -f /tmp/cdi-operator.yaml --validate=false"

- name: Wait until cdi-operator is running
  shell: "{{ cluster_command }} -n {{ cdi_namespace }} get deployment | grep cdi-operator | awk \'{ if ($2 == $5) print \"0\"; else print \"1\"}\'"
  register: result
  until: result.stdout == "0"
  retries: 24
  delay: 10

- name: Render CDI operator resources
  template:
    src: "cdi-operator-cr.yaml.j2"
    dest: "/tmp/cdi-operator-cr.yaml"

- name: Create CDI operator resources
  command: "{{ cluster_command }} apply -f /tmp/cdi-operator-cr.yaml --validate=false"

- name: Wait for CDI operator to report that everything is running
  command: "{{ cluster_command }} -n {{ cdi_namespace }} wait cdis.cdi.kubevirt.io/cdi --for=condition=running --timeout=300s"
