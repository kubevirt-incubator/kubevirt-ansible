---
- name: Check that kubevirt_metrics_collector_scc.yaml still exists in /tmp
  stat:
    path: "/tmp/kubevirt_metrics_collector_scc.yaml"
  register: kubevirt_metrics_collector
  when: kubevirt_metrics_collector_enabled

- name: Copy kubevirt_metrics_collector_scc.yaml to temp directory
  template:
    src: "{{ kubevirt_metrics_collector_files_dir }}/kubevirt_metrics_collector_scc.yaml"
    dest: "/tmp/kubevirt_metrics_collector_scc.yaml"
  when: kubevirt_metrics_collector_enabled and kubevirt_metrics_collector.stat.exists == false

- name: Check that kubevirt_metrics_collector_ds.yaml still exists in /tmp
  stat:
    path: "/tmp/kubevirt_metrics_collector.yaml"
  register: kubevirt_metrics_collector_ds
  when: kubevirt_metrics_collector_enabled

- name: Copy kubevirt_metrics_collector_ds.yaml to temp directory
  template:
    src: "{{ kubevirt_metrics_collector_files_dir }}/kubevirt_metrics_collector_ds.yaml"
    dest: "/tmp/kubevirt_metrics_collector_ds.yaml"
  when: kubevirt_metrics_collector_enabled and kubevirt_metrics_collector_ds.stat.exists == false

- name: Delete kubevirt_metrics_collector_scc
  shell: "{{ cluster_command }} delete --ignore-not-found -f /tmp/kubevirt_metrics_collector_scc.yaml -n {{ kubevirt_metrics_collector_namespace }}"
  when: kubevirt_metrics_collector_enabled

- name: Delete kubevirt_metrics_collector_ds
  shell: "{{ cluster_command }} delete --ignore-not-found -f /tmp/kubevirt_metrics_collector_ds.yaml -n {{ kubevirt_metrics_collector_namespace }}"
  when: kubevirt_metrics_collector_enabled

- name: Wait until kubevirt_metrics_collector deamonset is deleted
  shell: "{{ cluster_command }} -n {{ kubevirt_metrics_collector_namespace }} get ds | grep -o -E kubevirt_metrics_collector | wc -l"
  register: result
  until: result.stdout == "0"
  retries: 24
  delay: 10
  when: kubevirt_metrics_collector_enabled

