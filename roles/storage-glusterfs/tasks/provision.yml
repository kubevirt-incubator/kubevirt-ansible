---
- name: Login As Super User
  command: "oc login -u {{ admin_user }} -p {{ admin_password }}"
  when: cluster=="openshift"
        and admin_user is defined
        and admin_password is defined

- set_fact:
    glusterfs_name_label: "{{ glusterfs_name }}{% if glusterfs_name %}-{% endif %}"

- name: Determine the heketi route
  command: > 
    oc get route -n {{ glusterfs_namespace }} 
    -l heketi={{ glusterfs_name_label }}route 
    -o jsonpath='{.items[0].spec.host}'
  register: route_cmd
  when:
    - cluster == 'openshift'
    - heketi_url is not defined

- set_fact:
    heketi_url: "{{ route_cmd.stdout }}"
  when:
    - cluster == 'openshift'
    - route_cmd is defined

- name: Determine the heketi route for k8s, IP
  command: > 
    kubectl get pod -n {{ glusterfs_namespace }} 
    -l heketi={{ glusterfs_name_label }}pod 
    -o jsonpath='{.items[0].status.podIP}'
  register: heketi_pod_ip
  when:
    - cluster == 'kubernetes'
    - heketi_url is not defined

- name: Determine the heketi route for k8s, port
  command: > 
    kubectl get pod -n {{ glusterfs_namespace }} 
    -l heketi={{ glusterfs_name_label }}pod 
    -o jsonpath='{.items[0].spec.containers[0].ports[0].containerPort}'
  register: heketi_pod_port
  when:
    - cluster == 'kubernetes'
    - heketi_url is not defined

- set_fact:
    heketi_url: "{{ heketi_pod_ip.stdout }}:{{ heketi_pod_port.stdout }}"
  when:
    - cluster == 'kubernetes'
    - heketi_url is not defined
    - heketi_pod_ip is defined
    - heketi_pod_port is defined
    
- name: Get heketi admin key
  shell: > 
    kubectl get pod -n {{ glusterfs_namespace }} 
    -l heketi={{ glusterfs_name_label }}pod 
    -o jsonpath='{.items[0].spec.containers[0].env[?(@.name==\"HEKETI_ADMIN_KEY\")].value}' 
    | base64 -
  register: key_cmd
  when: heketi_admin_key is not defined

- set_fact:
    heketi_admin_key: "{{ key_cmd.stdout }}"
  when: heketi_admin_key is not defined

- name: Render storage-glusterfs deployment yaml
  template:
    src: storage-glusterfs.yml.j2
    dest: /tmp/storage-glusterfs.yml

- name: Create storage-glusterfs Resources
  command: "kubectl apply -n {{ glusterfs_namespace }} -f /tmp/storage-glusterfs.yml"
